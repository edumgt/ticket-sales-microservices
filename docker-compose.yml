version: '3.9'
services:

  postgres:
    container_name: postgres
    image: debezium/postgres:15-alpine
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_PASSWORD=postgres
    networks:
      - tsm

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - tsm

  kafka:
    restart: always
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - tsm

  debezium:
    container_name: debezium
    image: debezium/connect:2.3
    ports:
      - "8083:8083"
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
    networks:
      - tsm

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - tsm

networks:
  tsm:
    name: tsm


# curl -X POST localhost:8083/connectors -H "Content-Type: application/json" -d @./connectors/debezium.json

